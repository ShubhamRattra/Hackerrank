//Implement the class Box  
class Box{
//l,b,h are integers representing the dimensions of the box
private:
int l,b,h;
// The class should have the following functions : 
public:
// Constructors: 
// Box();
Box() {
    l = 0;
    b = 0;
    h = 0;
}
// Box(int,int,int);
Box(int length,int breath,int height) {
    l = length;
    b = breath;
    h = height;
}
// Box(Box);
Box(const Box& B) {
    l = B.l;
    b = B.b;
    h = B.h;
}
// int getLength(); // Return box's length
int getLength() {
    return l;
}
// int getBreadth (); // Return box's breadth
int getBreath() {
    return b;
}
// int getHeight ();  //Return box's height
int getHeight() {
    return h;
}
// long long CalculateVolume(); // Return the volume of the box
long long CalculateVolume() {
    return (long long) l*b*h;
}
//Overload operator < as specified
friend bool operator < (Box& A, Box& B) {  
 if( (A.l<B.l) || ((A.b<B.b) && (A.l==B.l)) || ((A.h<B.h) && (A.l==B.l) && (A.b==B.l)) )
 { return true; }
 else
 { return false; }
}
//bool operator<(Box& b)
//Overload operator << as specified
//ostream& operator<<(ostream& out, Box& B)
friend ostream& operator << (ostream& output, const Box& B) {
    output<<B.l<<" "<<B.b<<" "<<B.h;
    return output;
 }
};
